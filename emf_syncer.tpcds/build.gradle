import java.io.File

plugins {
	id "org.xtext.xtend" version "3.0.2"
	id 'org.springframework.boot' version '2.6.3' // '2.1.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'application'
	id 'eclipse'
	id 'maven-publish'
}

group 'arturboronat'
version '0.0.1-SNAPSHOT'

application {
	mainClassName = 'tpcds.Driver'
		
	applicationDefaultJvmArgs = [
		'-Xmx12G', 
		'-XX:+UseG1GC', // '-XX:+UseConcMarkSweepGC',
		'-Dfactor=00_0625',
		'-Diterations=1',
		'-Ddir=/Users/ab373/Documents/ArturData/WORK/git/javaecoresync/tpcds-emf/src/main/resources/experimentResults/results',
		'-Dname=queries',
		'-DdbConfig.username=aboronat_tpcds',
		'-DdbConfig.password=aboronat_tpcds',
		'-DdbConfig.host=127.0.0.1',
		'-DdbConfig.port=3306',
		'-DdbConfig.name=00_0625'
	]
}

eclipse {
	project {
	  name = 'emf-syncer.tpcds'
	  buildCommand 'org.eclipse.jdt.core.javabuilder'
	  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
	  buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
	  // aspectJ
	  buildCommand 'org.eclipse.ajdt.core.ajbuilder'
	  // xcore,xtext
	  buildCommand 'org.eclipse.xtext.ui.shared.xtextBuilder'
	  buildCommand 'org.eclipse.pde.ManifestBuilder'
	  buildCommand 'org.eclipse.pde.SchemaBuilder'

	  natures 'org.eclipse.jdt.core.javanature',
	  	'org.eclipse.ajdt.ui.ajnature',
		  'org.eclipse.buildship.core.gradleprojectnature',
		  'org.eclipse.wst.common.project.facet.core.nature',
		  'org.eclipse.xtext.ui.shared.xtextNature',
		  'org.eclipse.pde.PluginNature'
	}
}


repositories {
	maven {
		url "https://github.com/yamtl/yamtl.github.io/raw/mvn-repo/mvn-repo/snapshot-repo"
	}
	//mavenLocal()
	mavenCentral()
	jcenter()
	maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
}


ext {
	// support for Java 17 (03-2022)
	mvnBuildDir = 'C:/Users/ab373/Documents/git-artur/yamtl.github.io'
    xtendVersion = '2.26.0' // '2.18.0'
    // guavaVersion = '30.1-jre' // '24.0-jre' 
	aspectJVersion = '1.9.9.1'
	gradleVersion = '7.3' // for info purposes only
	emfSyncerVersion = '0.0.3'
	springBootVersion = '2.6.3'
}



// XTEND: configures output directories for generated java
xtend {
	sourceSets {
		main.xtendOutputDir = 'src/main/xtend-gen'
		test.xtendOutputDir = 'src/test/xtend-gen'
	}
}

// XCORE CONFIGURATION
sourceSets {
	main {
		java {
			srcDirs = [
				'src/main/java',
				'src/main/emf-gen',
				'src/main/xtend-gen'
			]
		}
	}
	test {
		java {
			srcDir 'src/test/xtend-gen'
		}
	}
}


// ASPECTJ
configurations {
	ajc
	aspects
	aspectCompile
	ajInpath
	compile {
		extendsFrom aspects
	}
}


sourceCompatibility = JavaVersion.VERSION_11
compileJava {
	sourceCompatibility = JavaVersion.VERSION_11
	if (project.hasProperty("withAspect")) {
		doLast{
		  ant.taskdef( resource:"org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajc.asPath )
		  ant.iajc(
		  	source: sourceCompatibility,
			destDir: sourceSets.main.output.classesDirs.singleFile.absolutePath,
			inpath: configurations.ajInpath.asPath,
			maxmem: "512m",
			fork: "true",
			aspectPath:configurations.aspects.asPath,
			sourceRootCopyFilter:"**/.git/*,**/*.java",
			classpath:"${configurations.compileClasspath.asPath};${configurations.aspectCompile.asPath}"){ 
			sourceroots{
			  sourceSets.main.java.srcDirs.each{
				  pathelement(location:it.absolutePath)
			  }
			}
		  }
		}
	} 
}

dependencies {
	implementation "yamtl:emf-syncer:$emfSyncerVersion"
	
	// EMF
	implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.15.0'
	implementation 'org.eclipse.emf:org.eclipse.emf.ecore.change:2.11+'
	
	// guava: Files
	// implementation "com.google.guava:guava:$guavaVersion" 
				
	// xtend
	implementation "org.eclipse.xtend:org.eclipse.xtend.lib:$xtendVersion" // 2.11+
	implementation "org.eclipse.xtext:org.eclipse.xtext.ecore:$xtendVersion" // 2.11+
	
	// persistence
	implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}") 
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'

	// opencsv
	implementation "com.opencsv:opencsv:4.5"
	
	// for parsing args in main
	implementation 'commons-cli:commons-cli:1.4'
	
	// AspectJ
	ajc "org.aspectj:aspectjtools:${aspectJVersion}"
	compileOnly("org.aspectj:aspectjrt:${aspectJVersion}")
	compileOnly("org.aspectj:aspectjweaver:${aspectJVersion}")
	ajInpath "org.eclipse.emf:org.eclipse.emf.ecore:2.15.0"
//	needed for getter aspect when using collections
	ajInpath "yamtl:emf-syncer:$emfSyncerVersion"
	ajInpath "org.eclipse.core:org.eclipse.core.resources:3.7.100"
	ajInpath 'org.osgi:org.osgi.service.event:1.4.0'
	ajInpath 'org.eclipse.core:org.eclipse.core.runtime:3.7.0'
	ajInpath 'org.eclipse.core.runtime.compatibility:auth:3.2.100-v20070502'
	
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE'
}

// use bootJar

task fatJar(type: Jar) {
// duplicatesStrategy = DuplicatesStrategy.INCLUDE
	manifest {
		attributes ('Main-Class': 'tpcds.Driver')
	}
	// remove signatures as we are not signing this jar to avoid security warnings
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
	baseName = project.name + '-all'
	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
	}
	with jar
}


// MAVEN PUBLISHING
publishing {
	publications {
	  mavenJava(MavenPublication) {
		from components.java
	  }
	}
  
	repositories {
	  mavenLocal()
	}
}

// to test before publishing jar in maven
jar.dependsOn test
